[1mdiff --git a/src/hooks/use-data.tsx b/src/hooks/use-data.tsx[m
[1mindex 6de2a71..c4e995e 100644[m
[1m--- a/src/hooks/use-data.tsx[m
[1m+++ b/src/hooks/use-data.tsx[m
[36m@@ -1,10 +1,10 @@[m
 import { createContext, useContext, useEffect, useState } from 'react'[m
[31m-import type { LatLngTuple } from 'leaflet'[m
 [m
 export type Venue = {[m
   id: string[m
   name: string[m
[31m-  coordinates: LatLngTuple[m
[32m+[m[32m  lat: number[m
[32m+[m[32m  lng: number[m
   system?: string[m
   price?: number[m
   moneyBack?: boolean[m
[36m@@ -15,7 +15,8 @@[m [mconst fakeVenues: Venue[] = [[m
   {[m
     id: '960',[m
     name: 'Budapest Park',[m
[31m-    coordinates: [47.4676345, 19.0745992],[m
[32m+[m[32m    lat: 47.4676345,[m
[32m+[m[32m    lng: 19.0745992,[m
     system: 'Park',[m
     price: 300,[m
     moneyBack: false,[m
[36m@@ -24,25 +25,8 @@[m [mconst fakeVenues: Venue[] = [[m
   {[m
     id: '960',[m
     name: 'Budapest Park 1',[m
[31m-    coordinates: [47.4676345, 19.0745992],[m
[31m-    system: 'Park',[m
[31m-    price: 300,[m
[31m-    moneyBack: false,[m
[31m-    notes: 'teszt',[m
[31m-  },[m
[31m-  {[m
[31m-    id: '960',[m
[31m-    name: 'Budapest Park 2',[m
[31m-    coordinates: [47.4676345, 19.0745992],[m
[31m-    system: 'Park',[m
[31m-    price: 300,[m
[31m-    moneyBack: false,[m
[31m-    notes: 'teszt',[m
[31m-  },[m
[31m-  {[m
[31m-    id: '960',[m
[31m-    name: 'Bubo',[m
[31m-    coordinates: [47.4676345, 19.0745992],[m
[32m+[m[32m    lat: 47.4676345,[m
[32m+[m[32m    lng: 19.0745992,[m
     system: 'Park',[m
     price: 300,[m
     moneyBack: false,[m
[1mdiff --git a/src/sections/map/index.tsx b/src/sections/map/index.tsx[m
[1mindex cc378cb..36cac1d 100644[m
[1m--- a/src/sections/map/index.tsx[m
[1m+++ b/src/sections/map/index.tsx[m
[36m@@ -1,11 +1,10 @@[m
 import React, { useState } from 'react'[m
 import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'[m
[31m-import type { LatLngTuple } from 'leaflet'[m
 [m
 import { useData, Venue } from '../../hooks/use-data'[m
 import './leaflet.css'[m
 [m
[31m-const budapestCoords: LatLngTuple = [47.497913, 19.040236][m
[32m+[m[32mconst budapestCoords: [number, number] = [47.497913, 19.040236][m
 [m
 const VenueProp: React.FC<{ label: string, value: string }> = ({ label, value = '' }) => ([m
   <div className="flex gap-4 my-1.5">[m
[36m@@ -27,7 +26,8 @@[m [mexport const Map: React.FC = () => {[m
 [m
   const ActiveVenuePopup: React.FC<Venue> = ({[m
     name,[m
[31m-    coordinates,[m
[32m+[m[32m    lat,[m
[32m+[m[32m    lng,[m
     system,[m
     price,[m
     moneyBack,[m
[36m@@ -35,7 +35,7 @@[m [mexport const Map: React.FC = () => {[m
   }) => {[m
     return ([m
       <Popup[m
[31m-        position={coordinates}[m
[32m+[m[32m        position={[lat, lng]}[m
         eventHandlers={{[m
           popupclose: () => { setActiveVenue(null) }[m
         }}[m
[36m@@ -61,7 +61,7 @@[m [mexport const Map: React.FC = () => {[m
       {venues.map((venue: Venue) => ([m
         <Marker[m
           key={venue.id}[m
[31m-          position={venue.coordinates}[m
[32m+[m[32m          position={[venue.lat, venue.lng]}[m
           eventHandlers={{[m
             click: () => { setActiveVenue(venue) }[m
           }}[m
